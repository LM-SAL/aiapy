[metadata]
name = aiapy
author = AIA Instrument Team
author_email = cheung@lmsal.com
license = BSD 3-Clause
license_files = LICENSE.rst
url = https://gitlab.com/LMSAL_HUB/aia_hub/aiapy
gitlab_project = 'LMSAL_HUB/aia_hub/aiapy'
keywords = solar physics, solar, science, sun, sdo, aia, solar dynamics observatory, atmospheric imaging assembly
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Scientific/Engineering :: Astronomy
description = Python package for AIA analysis.
long_description = file: README.rst

[options]
zip_safe = False
packages = find:
python_requires = >=3.8
setup_requires = setuptools_scm
install_requires =
    sunpy[net,image,map]>=4.0.4

[options.extras_require]
test =
    hissw
    pytest
    pytest-astropy
docs =
    packaging
    sphinx
    sphinx-automodapi
    sphinx-changelog
    sphinx-gallery
    sphinx-design
    sphinxext-opengraph
    sunpy-sphinx-theme

[options.package_data]
aiapy = CITATION.rst, data/*
aiapy.tests = data/*

[tool:pytest]
testpaths = "aiapy" "docs"
norecursedirs = ".tox" "build" "docs[\/]_build" "docs[\/]generated" "*.egg-info" "examples" ".jupyter" ".history" "tools" "joss"
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst --doctest-ignore-import-errors -p no:unraisableexception -p no:threadexception
remote_data_strict = True
filterwarnings =
    error
    # Do not fail on pytest config issues (i.e. missing plugins) but do show them
    always::pytest.PytestConfigWarning
    #
    # A list of warnings to ignore follows. If you add to this list, you MUST
    # add a comment or ideally a link to an issue that explains why the warning
    # is being ignored
    #
    #
    ignore:distutils Version classes are deprecated
    ignore:The distutils.sysconfig module is deprecated, use sysconfig instead
    # This is due to dependencies building with a numpy version different from
    # the local installed numpy version, but should be fine
    # See https://github.com/numpy/numpy/issues/15748#issuecomment-598584838
    ignore:numpy.ufunc size changed:RuntimeWarning
    ignore:numpy.ndarray size changed:RuntimeWarning
    # Not sure if this is a problem
    ignore:invalid value encountered in divide
    # Some tests use data that have dates in the future and ERFA does not like.
    ignore:ERFA function "d2dtf"*
    ignore:ERFA function "dtf2d"*
    ignore:ERFA function "utctai"*
    ignore:ERFA function "taiutc"*
    # test_degradation[None-10-time_correction_truth0] raises this:
    ignore:Multiple valid epochs for .*. Using the most recent one
    # From Zeep
    ignore:'cgi' is deprecated and slated for removal in Python 3.13:DeprecationWarning

[pycodestyle]
max_line_length = 110

[flake8]
max-line-length = 110
exclude =
    .git,
    __pycache__,
    docs/conf.py,
    build,
    aiapy/__init__.py,
rst-directives =
    plot

[isort]
balanced_wrapping = True
skip=docs/conf.py,aiapy/__init__.py
default_section = THIRDPARTY
include_trailing_comma = True
known_astropy = astropy, asdf, sunpy
known_first_party = aiapy
length_sort = False
length_sort_sections=stdlib
line_length = 110
multi_line_output = 3
no_lines_before = LOCALFOLDER
sections = STDLIB, THIRDPARTY, ASTROPY, FIRSTPARTY, LOCALFOLDER

[coverage:run]
omit =
    aiapy/conftest.py
    aiapy/tests/*
    aiapy/*/tests/*
    aiapy/extern/*
    aiapy/*version*
    */aiapy/conftest.py
    */aiapy/tests/*
    */aiapy/*/tests/*
    */aiapy/*version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
