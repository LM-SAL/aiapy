[metadata]
name = aiapy
author = AIA Instrument Team
author_email = cheung@lmsal.com
license = BSD 3-Clause
license_file = LICENSE.rst
url = https://gitlab.com/LMSAL_HUB/aia_hub/aiapy
gitlab_project = 'LMSAL_HUB/aia_hub/aiapy'
keywords = solar physics, solar, science, sun, sdo, aia, solar dynamics observatory, atmospheric imaging assembly
classifiers =
  Development Status :: 4 - Beta
  Intended Audience :: Science/Research
  License :: OSI Approved :: BSD License
  Programming Language :: Python
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.6
  Programming Language :: Python :: 3.7
  Programming Language :: Python :: 3.8
  Topic :: Scientific/Engineering :: Astronomy
description = Python package for AIA analysis.
long_description = file: README.rst

[options]
zip_safe = False
packages = find:
python_requires = >=3.6
setup_requires = setuptools_scm
install_requires =
    sunpy[net,image]>=2.0
    importlib_resources;python_version<"3.7"

[options.extras_require]
test =
    pytest<6.0.0
    pytest-astropy
    pytest-cov
    hissw
    flake8
    doc8
    pytest-pep8
docs =
    sphinx<=3.0.0
    sphinx-automodapi
    towncrier
    sphinx-rtd-theme
    sphinx-gallery


[options.package_data]
aiapy = CITATION.rst, data/*
aiapy.tests = data/*

[flake8]
exclude = extern,sphinx,*parsetab.py

[pycodestyle]
exclude = extern,sphinx,*parsetab.py

[tool:pytest]
testpaths = "aiapy" "docs"
norecursedirs = ".tox" "build" "docs[\/]_build" "docs[\/]generated" "*.egg-info" "examples" ".jupyter" ".history" "tools"
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst
remote_data_strict = True

[coverage:run]
omit =
  aiapy/_sunpy_init*
  aiapy/conftest.py
  aiapy/*setup_package*
  aiapy/tests/*
  aiapy/*/tests/*
  aiapy/extern/*
  aiapy/version*
  */aiapy/_sunpy_init*
  */aiapy/conftest.py
  */aiapy/*setup_package*
  */aiapy/tests/*
  */aiapy/*/tests/*
  */aiapy/extern/*
  */aiapy/version*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
  # Don't complain about IPython completion helper
  def _ipython_key_completions_
